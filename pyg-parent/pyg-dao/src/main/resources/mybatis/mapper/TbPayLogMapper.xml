<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pyg.mapper.TbPayLogMapper">
  <resultMap id="BaseResultMap" type="com.pyg.entity.TbPayLog">
    <id column="out_trade_no" jdbcType="VARCHAR" property="out_trade_no" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="pay_time" />
    <result column="total_fee" jdbcType="BIGINT" property="total_fee" />
    <result column="user_id" jdbcType="VARCHAR" property="user_id" />
    <result column="transaction_id" jdbcType="VARCHAR" property="transaction_id" />
    <result column="trade_state" jdbcType="VARCHAR" property="trade_state" />
    <result column="order_list" jdbcType="VARCHAR" property="order_list" />
    <result column="pay_type" jdbcType="VARCHAR" property="pay_type" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    out_trade_no, create_time, pay_time, total_fee, user_id, transaction_id, trade_state, 
    order_list, pay_type
  </sql>
  <select id="selectByExample" parameterType="com.pyg.entity.TbPayLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_pay_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_pay_log
    where out_trade_no = #{out_trade_no,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_pay_log
    where out_trade_no = #{out_trade_no,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.pyg.entity.TbPayLogExample">
    delete from tb_pay_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pyg.entity.TbPayLog">
    insert into tb_pay_log (out_trade_no, create_time, pay_time, 
      total_fee, user_id, transaction_id, 
      trade_state, order_list, pay_type
      )
    values (#{out_trade_no,jdbcType=VARCHAR}, #{create_time,jdbcType=TIMESTAMP}, #{pay_time,jdbcType=TIMESTAMP}, 
      #{total_fee,jdbcType=BIGINT}, #{user_id,jdbcType=VARCHAR}, #{transaction_id,jdbcType=VARCHAR}, 
      #{trade_state,jdbcType=VARCHAR}, #{order_list,jdbcType=VARCHAR}, #{pay_type,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pyg.entity.TbPayLog">
    insert into tb_pay_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="out_trade_no != null">
        out_trade_no,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="pay_time != null">
        pay_time,
      </if>
      <if test="total_fee != null">
        total_fee,
      </if>
      <if test="user_id != null">
        user_id,
      </if>
      <if test="transaction_id != null">
        transaction_id,
      </if>
      <if test="trade_state != null">
        trade_state,
      </if>
      <if test="order_list != null">
        order_list,
      </if>
      <if test="pay_type != null">
        pay_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="out_trade_no != null">
        #{out_trade_no,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="pay_time != null">
        #{pay_time,jdbcType=TIMESTAMP},
      </if>
      <if test="total_fee != null">
        #{total_fee,jdbcType=BIGINT},
      </if>
      <if test="user_id != null">
        #{user_id,jdbcType=VARCHAR},
      </if>
      <if test="transaction_id != null">
        #{transaction_id,jdbcType=VARCHAR},
      </if>
      <if test="trade_state != null">
        #{trade_state,jdbcType=VARCHAR},
      </if>
      <if test="order_list != null">
        #{order_list,jdbcType=VARCHAR},
      </if>
      <if test="pay_type != null">
        #{pay_type,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pyg.entity.TbPayLogExample" resultType="java.lang.Long">
    select count(*) from tb_pay_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_pay_log
    <set>
      <if test="record.out_trade_no != null">
        out_trade_no = #{record.out_trade_no,jdbcType=VARCHAR},
      </if>
      <if test="record.create_time != null">
        create_time = #{record.create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pay_time != null">
        pay_time = #{record.pay_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.total_fee != null">
        total_fee = #{record.total_fee,jdbcType=BIGINT},
      </if>
      <if test="record.user_id != null">
        user_id = #{record.user_id,jdbcType=VARCHAR},
      </if>
      <if test="record.transaction_id != null">
        transaction_id = #{record.transaction_id,jdbcType=VARCHAR},
      </if>
      <if test="record.trade_state != null">
        trade_state = #{record.trade_state,jdbcType=VARCHAR},
      </if>
      <if test="record.order_list != null">
        order_list = #{record.order_list,jdbcType=VARCHAR},
      </if>
      <if test="record.pay_type != null">
        pay_type = #{record.pay_type,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_pay_log
    set out_trade_no = #{record.out_trade_no,jdbcType=VARCHAR},
      create_time = #{record.create_time,jdbcType=TIMESTAMP},
      pay_time = #{record.pay_time,jdbcType=TIMESTAMP},
      total_fee = #{record.total_fee,jdbcType=BIGINT},
      user_id = #{record.user_id,jdbcType=VARCHAR},
      transaction_id = #{record.transaction_id,jdbcType=VARCHAR},
      trade_state = #{record.trade_state,jdbcType=VARCHAR},
      order_list = #{record.order_list,jdbcType=VARCHAR},
      pay_type = #{record.pay_type,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pyg.entity.TbPayLog">
    update tb_pay_log
    <set>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="pay_time != null">
        pay_time = #{pay_time,jdbcType=TIMESTAMP},
      </if>
      <if test="total_fee != null">
        total_fee = #{total_fee,jdbcType=BIGINT},
      </if>
      <if test="user_id != null">
        user_id = #{user_id,jdbcType=VARCHAR},
      </if>
      <if test="transaction_id != null">
        transaction_id = #{transaction_id,jdbcType=VARCHAR},
      </if>
      <if test="trade_state != null">
        trade_state = #{trade_state,jdbcType=VARCHAR},
      </if>
      <if test="order_list != null">
        order_list = #{order_list,jdbcType=VARCHAR},
      </if>
      <if test="pay_type != null">
        pay_type = #{pay_type,jdbcType=VARCHAR},
      </if>
    </set>
    where out_trade_no = #{out_trade_no,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pyg.entity.TbPayLog">
    update tb_pay_log
    set create_time = #{create_time,jdbcType=TIMESTAMP},
      pay_time = #{pay_time,jdbcType=TIMESTAMP},
      total_fee = #{total_fee,jdbcType=BIGINT},
      user_id = #{user_id,jdbcType=VARCHAR},
      transaction_id = #{transaction_id,jdbcType=VARCHAR},
      trade_state = #{trade_state,jdbcType=VARCHAR},
      order_list = #{order_list,jdbcType=VARCHAR},
      pay_type = #{pay_type,jdbcType=VARCHAR}
    where out_trade_no = #{out_trade_no,jdbcType=VARCHAR}
  </update>
  <insert id="batchInsert" parameterType="map">
    insert into tb_pay_log
    (out_trade_no, create_time, pay_time, total_fee, user_id, transaction_id, trade_state, 
      order_list, pay_type)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.out_trade_no,jdbcType=VARCHAR}, #{item.create_time,jdbcType=TIMESTAMP}, #{item.pay_time,jdbcType=TIMESTAMP}, 
        #{item.total_fee,jdbcType=BIGINT}, #{item.user_id,jdbcType=VARCHAR}, #{item.transaction_id,jdbcType=VARCHAR}, 
        #{item.trade_state,jdbcType=VARCHAR}, #{item.order_list,jdbcType=VARCHAR}, #{item.pay_type,jdbcType=VARCHAR}
        )
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    insert into tb_pay_log (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'out_trade_no'.toString() == column.value">
          #{item.out_trade_no,jdbcType=VARCHAR}
        </if>
        <if test="'create_time'.toString() == column.value">
          #{item.create_time,jdbcType=TIMESTAMP}
        </if>
        <if test="'pay_time'.toString() == column.value">
          #{item.pay_time,jdbcType=TIMESTAMP}
        </if>
        <if test="'total_fee'.toString() == column.value">
          #{item.total_fee,jdbcType=BIGINT}
        </if>
        <if test="'user_id'.toString() == column.value">
          #{item.user_id,jdbcType=VARCHAR}
        </if>
        <if test="'transaction_id'.toString() == column.value">
          #{item.transaction_id,jdbcType=VARCHAR}
        </if>
        <if test="'trade_state'.toString() == column.value">
          #{item.trade_state,jdbcType=VARCHAR}
        </if>
        <if test="'order_list'.toString() == column.value">
          #{item.order_list,jdbcType=VARCHAR}
        </if>
        <if test="'pay_type'.toString() == column.value">
          #{item.pay_type,jdbcType=VARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>