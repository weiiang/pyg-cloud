<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pyg.mapper.TbUserMapper">
  <resultMap id="BaseResultMap" type="com.pyg.entity.TbUser">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="updated" jdbcType="TIMESTAMP" property="updated" />
    <result column="source_type" jdbcType="VARCHAR" property="source_type" />
    <result column="nick_name" jdbcType="VARCHAR" property="nick_name" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="head_pic" jdbcType="VARCHAR" property="head_pic" />
    <result column="qq" jdbcType="VARCHAR" property="qq" />
    <result column="account_balance" jdbcType="DECIMAL" property="account_balance" />
    <result column="is_mobile_check" jdbcType="VARCHAR" property="is_mobile_check" />
    <result column="is_email_check" jdbcType="VARCHAR" property="is_email_check" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="user_level" jdbcType="INTEGER" property="user_level" />
    <result column="points" jdbcType="INTEGER" property="points" />
    <result column="experience_value" jdbcType="INTEGER" property="experience_value" />
    <result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="last_login_time" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, username, password, phone, email, created, updated, source_type, nick_name, name, 
    status, head_pic, qq, account_balance, is_mobile_check, is_email_check, sex, user_level, 
    points, experience_value, birthday, last_login_time
  </sql>
  <select id="selectByExample" parameterType="com.pyg.entity.TbUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.pyg.entity.TbUserExample">
    delete from tb_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pyg.entity.TbUser">
    insert into tb_user (id, username, password, 
      phone, email, created, 
      updated, source_type, nick_name, 
      name, status, head_pic, 
      qq, account_balance, is_mobile_check, 
      is_email_check, sex, user_level, 
      points, experience_value, birthday, 
      last_login_time)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{created,jdbcType=TIMESTAMP}, 
      #{updated,jdbcType=TIMESTAMP}, #{source_type,jdbcType=VARCHAR}, #{nick_name,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{head_pic,jdbcType=VARCHAR}, 
      #{qq,jdbcType=VARCHAR}, #{account_balance,jdbcType=DECIMAL}, #{is_mobile_check,jdbcType=VARCHAR}, 
      #{is_email_check,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{user_level,jdbcType=INTEGER}, 
      #{points,jdbcType=INTEGER}, #{experience_value,jdbcType=INTEGER}, #{birthday,jdbcType=TIMESTAMP}, 
      #{last_login_time,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.pyg.entity.TbUser">
    insert into tb_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="updated != null">
        updated,
      </if>
      <if test="source_type != null">
        source_type,
      </if>
      <if test="nick_name != null">
        nick_name,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="head_pic != null">
        head_pic,
      </if>
      <if test="qq != null">
        qq,
      </if>
      <if test="account_balance != null">
        account_balance,
      </if>
      <if test="is_mobile_check != null">
        is_mobile_check,
      </if>
      <if test="is_email_check != null">
        is_email_check,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="user_level != null">
        user_level,
      </if>
      <if test="points != null">
        points,
      </if>
      <if test="experience_value != null">
        experience_value,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="last_login_time != null">
        last_login_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="source_type != null">
        #{source_type,jdbcType=VARCHAR},
      </if>
      <if test="nick_name != null">
        #{nick_name,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="head_pic != null">
        #{head_pic,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="account_balance != null">
        #{account_balance,jdbcType=DECIMAL},
      </if>
      <if test="is_mobile_check != null">
        #{is_mobile_check,jdbcType=VARCHAR},
      </if>
      <if test="is_email_check != null">
        #{is_email_check,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="user_level != null">
        #{user_level,jdbcType=INTEGER},
      </if>
      <if test="points != null">
        #{points,jdbcType=INTEGER},
      </if>
      <if test="experience_value != null">
        #{experience_value,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="last_login_time != null">
        #{last_login_time,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pyg.entity.TbUserExample" resultType="java.lang.Long">
    select count(*) from tb_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updated != null">
        updated = #{record.updated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.source_type != null">
        source_type = #{record.source_type,jdbcType=VARCHAR},
      </if>
      <if test="record.nick_name != null">
        nick_name = #{record.nick_name,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.head_pic != null">
        head_pic = #{record.head_pic,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null">
        qq = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.account_balance != null">
        account_balance = #{record.account_balance,jdbcType=DECIMAL},
      </if>
      <if test="record.is_mobile_check != null">
        is_mobile_check = #{record.is_mobile_check,jdbcType=VARCHAR},
      </if>
      <if test="record.is_email_check != null">
        is_email_check = #{record.is_email_check,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.user_level != null">
        user_level = #{record.user_level,jdbcType=INTEGER},
      </if>
      <if test="record.points != null">
        points = #{record.points,jdbcType=INTEGER},
      </if>
      <if test="record.experience_value != null">
        experience_value = #{record.experience_value,jdbcType=INTEGER},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.last_login_time != null">
        last_login_time = #{record.last_login_time,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_user
    set id = #{record.id,jdbcType=BIGINT},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      created = #{record.created,jdbcType=TIMESTAMP},
      updated = #{record.updated,jdbcType=TIMESTAMP},
      source_type = #{record.source_type,jdbcType=VARCHAR},
      nick_name = #{record.nick_name,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      head_pic = #{record.head_pic,jdbcType=VARCHAR},
      qq = #{record.qq,jdbcType=VARCHAR},
      account_balance = #{record.account_balance,jdbcType=DECIMAL},
      is_mobile_check = #{record.is_mobile_check,jdbcType=VARCHAR},
      is_email_check = #{record.is_email_check,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      user_level = #{record.user_level,jdbcType=INTEGER},
      points = #{record.points,jdbcType=INTEGER},
      experience_value = #{record.experience_value,jdbcType=INTEGER},
      birthday = #{record.birthday,jdbcType=TIMESTAMP},
      last_login_time = #{record.last_login_time,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pyg.entity.TbUser">
    update tb_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="source_type != null">
        source_type = #{source_type,jdbcType=VARCHAR},
      </if>
      <if test="nick_name != null">
        nick_name = #{nick_name,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="head_pic != null">
        head_pic = #{head_pic,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="account_balance != null">
        account_balance = #{account_balance,jdbcType=DECIMAL},
      </if>
      <if test="is_mobile_check != null">
        is_mobile_check = #{is_mobile_check,jdbcType=VARCHAR},
      </if>
      <if test="is_email_check != null">
        is_email_check = #{is_email_check,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="user_level != null">
        user_level = #{user_level,jdbcType=INTEGER},
      </if>
      <if test="points != null">
        points = #{points,jdbcType=INTEGER},
      </if>
      <if test="experience_value != null">
        experience_value = #{experience_value,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="last_login_time != null">
        last_login_time = #{last_login_time,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pyg.entity.TbUser">
    update tb_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP},
      source_type = #{source_type,jdbcType=VARCHAR},
      nick_name = #{nick_name,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      head_pic = #{head_pic,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      account_balance = #{account_balance,jdbcType=DECIMAL},
      is_mobile_check = #{is_mobile_check,jdbcType=VARCHAR},
      is_email_check = #{is_email_check,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      user_level = #{user_level,jdbcType=INTEGER},
      points = #{points,jdbcType=INTEGER},
      experience_value = #{experience_value,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      last_login_time = #{last_login_time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="batchInsert" parameterType="map">
    insert into tb_user
    (id, username, password, phone, email, created, updated, source_type, nick_name, 
      name, status, head_pic, qq, account_balance, is_mobile_check, is_email_check, sex, 
      user_level, points, experience_value, birthday, last_login_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.username,jdbcType=VARCHAR}, #{item.password,jdbcType=VARCHAR}, 
        #{item.phone,jdbcType=VARCHAR}, #{item.email,jdbcType=VARCHAR}, #{item.created,jdbcType=TIMESTAMP}, 
        #{item.updated,jdbcType=TIMESTAMP}, #{item.source_type,jdbcType=VARCHAR}, #{item.nick_name,jdbcType=VARCHAR}, 
        #{item.name,jdbcType=VARCHAR}, #{item.status,jdbcType=VARCHAR}, #{item.head_pic,jdbcType=VARCHAR}, 
        #{item.qq,jdbcType=VARCHAR}, #{item.account_balance,jdbcType=DECIMAL}, #{item.is_mobile_check,jdbcType=VARCHAR}, 
        #{item.is_email_check,jdbcType=VARCHAR}, #{item.sex,jdbcType=VARCHAR}, #{item.user_level,jdbcType=INTEGER}, 
        #{item.points,jdbcType=INTEGER}, #{item.experience_value,jdbcType=INTEGER}, #{item.birthday,jdbcType=TIMESTAMP}, 
        #{item.last_login_time,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    insert into tb_user (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id'.toString() == column.value">
          #{item.id,jdbcType=BIGINT}
        </if>
        <if test="'username'.toString() == column.value">
          #{item.username,jdbcType=VARCHAR}
        </if>
        <if test="'password'.toString() == column.value">
          #{item.password,jdbcType=VARCHAR}
        </if>
        <if test="'phone'.toString() == column.value">
          #{item.phone,jdbcType=VARCHAR}
        </if>
        <if test="'email'.toString() == column.value">
          #{item.email,jdbcType=VARCHAR}
        </if>
        <if test="'created'.toString() == column.value">
          #{item.created,jdbcType=TIMESTAMP}
        </if>
        <if test="'updated'.toString() == column.value">
          #{item.updated,jdbcType=TIMESTAMP}
        </if>
        <if test="'source_type'.toString() == column.value">
          #{item.source_type,jdbcType=VARCHAR}
        </if>
        <if test="'nick_name'.toString() == column.value">
          #{item.nick_name,jdbcType=VARCHAR}
        </if>
        <if test="'name'.toString() == column.value">
          #{item.name,jdbcType=VARCHAR}
        </if>
        <if test="'status'.toString() == column.value">
          #{item.status,jdbcType=VARCHAR}
        </if>
        <if test="'head_pic'.toString() == column.value">
          #{item.head_pic,jdbcType=VARCHAR}
        </if>
        <if test="'qq'.toString() == column.value">
          #{item.qq,jdbcType=VARCHAR}
        </if>
        <if test="'account_balance'.toString() == column.value">
          #{item.account_balance,jdbcType=DECIMAL}
        </if>
        <if test="'is_mobile_check'.toString() == column.value">
          #{item.is_mobile_check,jdbcType=VARCHAR}
        </if>
        <if test="'is_email_check'.toString() == column.value">
          #{item.is_email_check,jdbcType=VARCHAR}
        </if>
        <if test="'sex'.toString() == column.value">
          #{item.sex,jdbcType=VARCHAR}
        </if>
        <if test="'user_level'.toString() == column.value">
          #{item.user_level,jdbcType=INTEGER}
        </if>
        <if test="'points'.toString() == column.value">
          #{item.points,jdbcType=INTEGER}
        </if>
        <if test="'experience_value'.toString() == column.value">
          #{item.experience_value,jdbcType=INTEGER}
        </if>
        <if test="'birthday'.toString() == column.value">
          #{item.birthday,jdbcType=TIMESTAMP}
        </if>
        <if test="'last_login_time'.toString() == column.value">
          #{item.last_login_time,jdbcType=TIMESTAMP}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>